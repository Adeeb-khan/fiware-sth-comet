#!/usr/bin/env bash

# Ansible managed: modified by IoT devops team

# Short Term History configuration variables.
# STH is configured defining the folowing variables.
# All variables are optional, so, if one of this variables is not defined
# default value is used.

# See https://github.com/telefonicaid/IoT-STH#running-the-sth-server
# for further information

# Note: is important to export environment variables with export

# The host where the STH server will be started.
# Default value: "localhost".
export STH_HOST="0.0.0.0"

# The port where the STH server will be listening.
# Default value: 8666.
export STH_PORT="8666"

# A flag indicating if the empty results should be removed from the response.
# Default value: "true".
export FILTER_OUT_EMPTY="true"

# Array of resolutions the STH component should aggregate values for.
# Valid resolution values are: 'month', 'day', 'hour', 'minute' and 'second'
export AGGREGATION_BY="['day', 'hour', 'minute']"

# The temporal directory to be used by the STH to temporarily store files (right now .csv files) before returning them.
# Default value: "temp".
export TEMPORAL_DIR="temp"

# The service to be used if not sent by the Orion Context Broker in the notifications.
# Default value: "testService".
export DEFAULT_SERVICE="testService"

# The service path to be used if not sent by the Orion Context Broker in the notifications.
# Default value: "/testServicePath".
export DEFAULT_SERVICE_PATH="/testServicePath"

# The STH component supports 3 alternative data models when storing the raw and aggregated data
#  into the database: 1) one collection per attribute, 2) one collection per entity and
#  3) one collection per service path. The possible values are: "collection-per-attribute",
#  "collection-per-entity" and "collection-per-service-path" respectively. Default value:
#  "collection-per-entity".
export DATA_MODEL='collection-per-entity'
>>>>>>> Migration from the collection per entity to the collection per service path data model

# The username to use for the database connection.
# Default value: "".
export DB_USERNAME=""

# The password to use for the database connection.
# Default value: "".
export DB_PASSWORD=""

# The URI to use for the database connection.
# This does not include the 'mongo://' protocol part.
# Two or more host are comma separated.
# Default value: "localhost:27017".
export DB_URI="mongodb1:27017,mongodb2:27017,mongodb3:27017"

# The name of the MongoDB replica set.
# Default value: "".
export REPLICA_SET="cb_rs0"

# The prefix to be added to the service for the creation of the databases.
# More information below.
# Default value: "sth_".
export DB_PREFIX="sth_"

# The prefix to be added to the collections in the databases. More information below.
# Default value: "sth_".
export COLLECTION_PREFIX="sth_"

# The default MongoDB pool size of database connections.
# Default value: "5".
export POOL_SIZE="5"

# The write concern policy to apply when writing data to the MongoDB database.
# Write concenr more info: http://docs.mongodb.org/manual/core/write-concern/
# Default value: "1".
export WRITE_CONCERN="1"

# Flag indicating if the raw and/or aggregated data should be persisted.
# Valid values are: "only-raw", "only-aggregated" and "both".
# Default value: "both".
export SHOULD_STORE="both"

# Flag indicating if the raw and/or aggregated data collection names
# should include a hash portion. This is mostly due to MongoDB's limitation
# regarding the number of bytes a namespace may have (currently limited to 120 bytes).
# In case of hashing, information about the final collection name and its correspondence
# to each concrete service path, entity and (if applicable) attribute is stored in a
# collection named COLLECTION_PREFIX + "collection_names".
# Default value: "false".
export SHOULD_HASH="false"

# Data from the raw and aggregated data collections will be removed if older than the value specified in seconds.
# In case of raw data the reference time is the one stored in the recvTime property whereas in the case of the
# aggregated data the reference of time is the one stored in the _id.origin property.
# Set the value to 0 not to apply this time-based truncation policy. Default value: "0".
export TRUNCATION_EXPIREAFTERSECONDS="0"

# The oldest raw data (according to insertion time) will be removed if the size of the raw data collection gets bigger
# than the value specified in bytes.
# Set the value to 0 not to apply this truncation policy. Take into consideration than the "size" configuration
# parameter is mandatory in case size collection truncation is desired as required by MongoDB.
# Notice that this configuration parameter does not affect the aggregated data collections since MongoDB does not
# currently support updating documents in capped collections which increase the size of the documents.
# Notice also that in case of the raw data, the size-based truncation policy takes precedence over the TTL one.
# More concretely, if "size" is set, the value of "exporeAfterSeconds" is ignored for the raw data collections since
# currently MongoDB does not support TTL in capped collections.
# Default value: "0".
export TRUNCATION_SIZE="0"

# The oldest raw data (according to insertion time) will be removed if the number of documents in the raw data
# collections goes beyond the specified value. Set the value to 0 not to apply this truncation policy.
# Notice that this configuration parameter does not affect the aggregated data collections since MongoDB does not
# currently support updating documents in capped collections which increase the size of the documents.
# Default value: "0".
export TRUNCATION_MAX="0"

# Attribute values to one or more blank spaces should be ignored and not processed either as raw data or for the
# aggregated computations
# Default value: "true".
export IGNORE_BLANK_SPACES="true"

# The log level to use. Possible values are: "DEBUG", "INFO", "WARN", "ERROR" and "FATAL".
# Default value: "INFO".
export LOGOPS_LEVEL="INFO"

# The log format to use. Possible values are: "json" (writes logs as JSON), "dev" (for development, used when the
# NODE_ENV variable is set to 'development') and "pipe" (write logs separating the contents with pipes).
# Default value: "pipe".
export LOGOPS_FORMAT="pipe"

# The time in seconds between proof of life logging messages informing that
# the server is up and running normally.
# Default value: "60".
export PROOF_OF_LIFE_INTERVAL="60"
